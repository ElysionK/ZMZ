<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.core.center.dao.CenterDao">

	<resultMap type="order" id="orderMap">
		<id column="oid" property="oid" jdbcType="INTEGER"/>
		<result column="mid" property="mid" jdbcType="INTEGER"/>
		<result column="sum" property="sum" jdbcType="INTEGER"/>
		<result column="normal_price" property="normalPrice" jdbcType="DOUBLE"/>
		<result column="member_price" property="memberPrice" jdbcType="DOUBLE"/>
		<result column="order_time" property="orderTime" jdbcType="VARCHAR"/>
		<result column="deliver_time" property="deliverTime" jdbcType="VARCHAR"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
	</resultMap>
  
	<resultMap type="orderSubDetailDto" id="orderSubDetailDtoMap">
		<id column="olid" property="olid" jdbcType="INTEGER"/>
		<result column="name" property="productName" jdbcType="VARCHAR"/>
		<result column="pro_normal_price" property="proNormalPrice" jdbcType="DOUBLE"/>
		<result column="pro_member_price" property="proMemberPrice" jdbcType="DOUBLE"/>
		<result column="sum" property="sum" jdbcType="INTEGER"/>
	</resultMap>
	
	<resultMap type="offlineOrder" id="offlineOrderMap">
		<id column="ID" property="id" jdbcType="INTEGER"/>
		<result column="member_no" property="memberNo" jdbcType="VARCHAR"/>
		<result column="product_name" property="productName" jdbcType="VARCHAR"/>
		<result column="orignal_price" property="orignalPrice" jdbcType="DOUBLE"/>
		<result column="member_price" property="memberPrice" jdbcType="DOUBLE"/>
		<result column="preferential_price" property="preferentialPrice" jdbcType="DOUBLE"/>
		<result column="num" property="num" jdbcType="DOUBLE"/>
		<result column="date" property="date" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="offlineOrderDto" id="offlineOrderDtoMap">
		<id column="ID" property="id" jdbcType="INTEGER"/>
		<result column="member_no" property="memberNo" jdbcType="VARCHAR"/>
		<result column="product_name" property="productName" jdbcType="VARCHAR"/>
		<result column="orignal_price" property="orignalPrice" jdbcType="DOUBLE"/>
		<result column="member_price" property="memberPrice" jdbcType="DOUBLE"/>
		<result column="preferential_price" property="preferentialPrice" jdbcType="DOUBLE"/>
		<result column="num" property="num" jdbcType="DOUBLE"/>
		<result column="date" property="date" jdbcType="VARCHAR"/>
		<result column="total_orignal_price" property="totalOrignalPrice" jdbcType="DOUBLE"/>
		<result column="total_member_price" property="totalMemberPrice" jdbcType="DOUBLE"/>
		<result column="total_preferential_price" property="totalPreferentialPrice" jdbcType="DOUBLE"/>
	</resultMap>
	
  	<select id="listRecentOnlineOrder" resultMap="orderMap">
  		SELECT *
  		FROM	
  			T_ORDER
  		WHERE 
  			MID = #{mid, jdbcType=INTEGER}
  		ORDER BY ORDER_TIME DESC
  		LIMIT 0, #{recentLimit, jdbcType=INTEGER}	
  	</select>
  	
  	<select id="listOnlineOrders" resultMap="orderMap">
  		SELECT *
  		FROM	
  			T_ORDER
  		WHERE 
  			MID = #{mid, jdbcType=INTEGER}
  		ORDER BY ORDER_TIME DESC, DELIVER_TIME DESC
  	</select>
  	
  	<select id="findOrderByOid" resultMap="orderMap">
  		SELECT *
  		FROM	
  			T_ORDER
  		WHERE 
  			OID = #{oid, jdbcType=INTEGER}
  	</select>
  	
  	
  	<select id="listRecentOfflineOrder" resultMap="offlineOrderMap">
  		SELECT *
  		FROM	
  			T_OFFLINE_ORDER
  		WHERE 
  			MEMBER_NO = #{memberNo, jdbcType=VARCHAR}
  		ORDER BY DATE DESC
  		LIMIT 0, #{recentLimit, jdbcType=INTEGER}
  	</select>
  	
  	<select id="listOfflineOrders" resultMap="offlineOrderMap">
  		SELECT *
  		FROM	
  			T_OFFLINE_ORDER T
  		WHERE 
  			MEMBER_NO = #{memberNo, jdbcType=VARCHAR}
  		ORDER BY DATE DESC
  	</select>
  	
  	<select id="findOfflineOrderDtoById" resultMap="offlineOrderDtoMap">
  		SELECT
  			C.ID, 
  			C.MEMBER_NO,
			C.PRODUCT_NAME,
			C.ORIGNAL_PRICE,
			C.MEMBER_PRICE,
			C.PREFERENTIAL_PRICE,
			C.NUM,
			C.DATE,
			ROUND(IFNULL(C.ORIGNAL_PRICE, 0) * C.NUM, 2) total_orignal_price,
			ROUND(IFNULL(C.MEMBER_PRICE, 0) * C.NUM, 2) total_member_price, 
			ROUND(IFNULL(C.PREFERENTIAL_PRICE, 0) * C.NUM, 2) total_preferential_price
		FROM T_OFFLINE_ORDER C
		WHERE
			C.ID = #{id, jdbcType=INTEGER} 
  	</select>
  	
  	
  	<select id="findTotalMemberPriceOneYear" resultType="double">
  		SELECT
			sum(
				t.num * ifnull(t.preferential_price, 0)
			)
		FROM
			t_offline_order t
		LEFT JOIN
			t_user u
		ON	
			t.member_no = u.phone
		WHERE
			to_days(t.date) > (TO_DAYS(now()) - 365)
		AND
			u.id = #{userId, jdbcType=INTEGER}
  	</select>
  	
</mapper>